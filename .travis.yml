dist: bionic
osx_image: xcode11.3
addons:
  apt:
    packages:
    - iverilog
    - lcov
    - libsdl2-dev
    - libsdl2-image-dev
    _win_packages: &1
    - gcc-mingw-w64-i686
    - gcc-mingw-w64-x86-64
    - wine-stable
    - wine32
    - wine64
  artifacts:
    paths:
    - $(ls -1 $(make showbuilddir)/*.{gz,zip} | tr "\n" :)
    - $(find . -name 'core.*' -o -name 'core' | tr "\n" :)
    target_paths:
    - build/$TRAVIS_BUILD_NUMBER/$TRAVIS_JOB_NUMBER
    - version/$(git describe --always --tags --match 'v?.?.?*' $TRAVIS_COMMIT)
  homebrew:
    update: true # work around lack of bundle: https://travis-ci.community/t/macos-build-fails-because-of-homebrew-bundle-unknown-command/7296/21
    packages:
    - bison
    - icarus-verilog
    - sdl2
    - sdl2_image
env:
  global:
  - MAKEFLAGS=e
  - DEPSSRC=$HOME/local
  - C_INCLUDE_PATH=$DEPSSRC/include
  - LIBRARY_PATH=$DEPSSRC/lib
  - LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$LIBRARY_PATH"
  - LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$DEPSSRC/lib/x86_64-linux-gnu"
  - PATH="$PATH:$DEPSSRC/bin"
  - PATH="/usr/local/opt/bison/bin:$PATH"
  - CHECK_RULE=check
  - PKG_RULE=gzip
language: c
compiler:
- gcc
- clang
jobs:
  include:
  - language: node_js
    env:
    - PLATFORM=emscripten BUILD_FOR_NODE=1
    - CHECK_RULE=check_sw       JIT=0 SDL=0
    services:
    - docker
    before_install:
    - docker run -dit --name emscripten -v $(pwd):/src emscripten/emsdk:1.40.1
      bash
    script:
    - make PLATFORM=emscripten SDL=0 JIT=0 NODEPS lexer.c parser.c
    - docker exec -it emscripten make all PLATFORM=$PLATFORM JIT=$JIT SDL=$SDL
      NDEBUG=$NDEBUG
    - docker exec -it emscripten make $CHECK_RULE PLATFORM=$PLATFORM JIT=$JIT
      SDL=$SDL NDEBUG=$NDEBUG
before_script:
- mkdir -p $DEPSSRC
- if [[ $JIT != 0 ]] ; then ./scripts/build-lightning.sh 2.1.3 $DEPSSRC ; fi
- ". scripts/install_sdl.sh"
- if [[ $PLATFORM = mingw ]] ; then sed "s#{{{}}}#z:$(echo $PWD/3rdparty/sdl2/${TRAVIS_COMPILER%%-*}-w64-mingw32/bin
  | sed 's#/#\\\\\\\\#g')#" scripts/winepath.reg > scripts/winepath2.reg ; wine regedit
  scripts/winepath2.reg ; fi
- if [[ -n $COVERITY_SCAN_PROJECT_NAME ]] ; then curl -s 'https://scan.coverity.com/scripts/travisci_build_coverity_scan.sh'
  | bash || true ; fi
script:
- make all
- make $CHECK_RULE
- make local-install
- make $PKG_RULE
after_success:
- |
  if [[ -n $GCOV ]] ; then
      bash <(curl -s https://codecov.io/bash) -f $(make showbuilddir)/coverage.info.src -f $(make showbuilddir)/coverage.info.vpi
  fi
notifications:
  irc:
    channels:
    - irc.freenode.org#tenyr
    use_notice: true
    skip_join: true
