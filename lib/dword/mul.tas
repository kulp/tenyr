#include "common.th"

.global dw_mul

// Performs B:C <- D * E
dw_mul:
  // Load mask.
  m <- [rel(mask)]
  
  // Split up factors into 16-bit components.
  b <- d >> 16
  c <- d & m
  d <- e >> 16
  e <- e & m
  
  // Compute "middle" product.
  g <- b * e
  h <- c * d
  g <- g + h
  
  // Compute low 32 bits.
  c <- c * e
  h <- g & m
  h <- h << 16
  c <- c + h
  
  // Compute high 32 bits.
  b <- b * d
  g <- g >> 16
  b <- b + g
  
  ret

mask: .word 0xffff
