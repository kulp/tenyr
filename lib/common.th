#ifndef COMMON_TH_
#define COMMON_TH_

// The stack-setup prologue sets up a stack at the top of 8K
#define prologue            o <- ((1 << 13) - 1)

#define call(Label)         push(p + 2); p <- @+Label + p
#define push(Expr)          [o] <- Expr ; o <- o - 1
#define pop(Reg)            o <- o + 1 ; Reg <- [o]

#include "push.th"

// specify arguments to push or pop in address-ascending order
// The stack pointer is moved downward in memory, but arguments are pushed and
// popped upward in memory (last argument to {push,pop,load,drop}all has the
// highest address in memory)
#define pushall(...)        pushall_(o,__VA_ARGS__)
#define popall(...)         popall_(o,__VA_ARGS__)
#define loadall(...)        loadall_(o,__VA_ARGS__)
#define dropall(...)        dropall_(o,__VA_ARGS__)
// popall_ret() for convenient symmetry with a frame-creating popall()
#define popall_ret(...)     popall(P,__VA_ARGS__)

#endif

/* vi:set syntax=c: */
